#autoload
# -*- mode: zsh; sh-indentation: 2; indent-tabs-mode: nil; sh-basic-offset: 2; -*-
# vim: ft=zsh sw=2 ts=2 et
#
# Copyright (c) 2021 Z-Shell Community
#
# FUNCTION: za-bgn-bin-or-src-function-body
# Returns the body of the function wrapping a binary

  local name="$2" bin="$3" dir="${4#%}"
  integer run_type="$1" set_gem_home="$5" set_node_path="$6" set_virtualenv="$7" set_cwd="$8" \
  use_all_null="$9" use_err_null="$10" use_out_null="$11"

  local nl=$'\n' tab=$'    '

  REPLY="function ${(q)name} {
  local bindir=${(qqq)bin:h}
  ${${(M)set_gem_home:#1}:+local -x GEM_HOME=${(qqq)dir}}
  ${${(M)set_node_path:#1}:+local -x NODE_PATH=${(qqq)dir}/node_modules}
  ${${(M)set_virtualenv:#1}:+local -x VIRTUALENV=${(qqq)dir}/venv}
  local -xU PATH=${${(M)set_virtualenv:#1}:+${(qqq)dir}/venv/bin:}${${(M)set_node_path:#1}:+${(qqq)dir}/node_modules/.bin:}${${(M)set_gem_home:#1}:+${(qqq)dir}/bin:}\"\$bindir\":\"\$PATH\"
  ${${(M)set_cwd:#1}:+"local oldpwd=${(qqq)PWD}
  () { setopt local_options no_auto_pushd; builtin cd -q ${(qqq)dir}; }"}
  "

  if (( run_type == 0 )); then
    REPLY+="$tab\"\$bindir\"/${(qqq)bin:t} \"\$@\""
  elif (( run_type == 1 )); then
    REPLY+="$tab() { source \"\$bindir\"/${(qqq)bin:t}; } \"\$@\""
  elif (( run_type == 2 )); then
    REPLY+="$tab() { eval \"\$(<\"\$bindir\"/${(qqq)bin:t})\"; } \"\$@\""
  fi

  (( use_all_null )) && REPLY+=" &>/dev/null"
  (( use_err_null )) && REPLY+=" 2>/dev/null"
  (( use_out_null )) && REPLY+=" >/dev/null"

  REPLY+="$nl"
  REPLY+="${${(M)set_cwd:#1}:+"$nl$tab() { setopt local_options no_auto_pushd; builtin cd -q \"\$oldpwd\"; }"}
  }"
