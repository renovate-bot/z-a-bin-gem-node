#autoload
# -*- mode: zsh; sh-indentation: 2; indent-tabs-mode: nil; sh-basic-offset: 2; -*-
# vim: ft=zsh sw=2 ts=2 et
#
# Copyright (c) 2021-present Z-Shell Community

  builtin emulate -L zsh ${=${options[xtrace]:#off}:+-o xtrace}
  builtin setopt extended_glob warn_create_global typeset_silent no_short_loops rc_quotes no_auto_pushd

  [[ "$1" = plugin ]] && \
    local type="$1" user="$2" plugin="$3" id_as="$4" dir="$5" hook="$6" || \
    local type="$1" url="$2" id_as="$3" dir="$4" hook="$5"

  local nl=$'\n'

#
# sbin'' ice â€“ creation of shims (the name borrowed from rbenv)
#

  if (( ${+ICE[sbin]} )) {
    local -a sbins srcdst
    sbins=( ${(s.;.)ICE[sbin]} )

    local sbin
    integer set_gem_home set_node_path set_virtualenv

    (
      builtin cd -q "$dir"
      for sbin ( $sbins "" ) {
        if [[ -z $sbin && ${#sbins} -eq 0 ]]; then
          if [[ -f $dir/${id_as:t} ]]; then
            sbin="$dir/${id_as:t}"
          elif [[ -n $plugin && -f $dir/$plugin ]]; then
            sbin="$dir/$plugin"
          elif [[ -n $url && -f $dir/${url:t} ]]; then
            sbin="$dir/${url:t}"
          else
            local -a files
            files=( $dir/*(*Nnon:t) )
            if (( ${#files} )); then
              sbin="${files[1]}"
            else
              +zi-message "{annex}bin-gem-node-annex{ehi}:{rst} {warn}The automatic-empty {ice}sbin{warn} ice didn't find any executable files{rst}"
              break
            fi
          fi
        elif [[ -z $sbin ]]; then
          continue
        fi

        srcdst=( ${(@s.->.)sbin} )
        srcdst=( "${srcdst[@]//((#s)[[:space:]]##|[[:space:]]##(#e))/}" )
        [[ ${srcdst[1]} = [gnpcNEO]#g[gnpcNEO]#:* ]] && set_gem_home=1 || set_gem_home=0
        [[ ${srcdst[1]} = [gnpcNEO]#n[gnpcNEO]#:* ]] && set_node_path=1 || set_node_path=0
        [[ ${srcdst[1]} = [gnpcNEO]#p[gnpcNEO]#:* ]] && set_virtualenv=1 || set_virtualenv=0
        srcdst[1]=${srcdst[1]#[a-zA-Z]#:}

        # Substitute the standard keywords and param''-s
        @zi-substitute 'srcdst[1]' 'srcdst[2]'

        local -a fnames
        local fname
        eval "fnames=( ${srcdst[1]}(Nnon-.) )"
        for fname ( $fnames ) {
          srcdst[1]="$fname"
          local target_binary="${${(M)srcdst[1]:#/*}:-$dir/${srcdst[1]}}" fnam="${srcdst[2]:-${srcdst[1]:t}}"
          local file="${ZPFX}/bin/${fnam}"

          if [[ -f $file ]]; then
            command rm -f "$file"
            if [[ -f $file ]]; then
              +zi-message "{annex}bin-gem-node-annex{ehi}:{rst} {warn}Couldn't remove the {pname}$fnam{warn} shim from {dir}\$ZPFX/bin{rst} \
              {nl}{mmdsh}{rst} No write access to {dir}\$ZPFX/bin{rst}?"
            else
              +zi-message "{annex}bin-gem-node-annex{ehi}:{rst} Correctly removed the {pname}$fnam{rst} shim from {dir}\$ZPFX/bin{rst}" || \
            fi
          else
            +zi-message "{annex}bin-gem-node-annex{ehi}:{rst} {warn}The {pname}$fnam{warn} shim didn't exist in {dir}\$ZPFX/bin{rst}"
          fi
        }
      }
    )
  }
